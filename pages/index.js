import Head from "next/head";
import { useState, useCallback, useEffect } from "react";
import { ThemeProvider } from "styled-components";
import Logo from "../components/Logo/Logo";
import MainHeader from "../components/MainHeader/MainHeader";
import Search from "../components/Search/Search";
import Sort from "../components/Sort/Sort";
import ThemeContainer from "../components/ThemeContainer/ThemeContainer";
import ThemeSwitcher from "../components/ThemeSwitcher/ThemeSwitcher";
import { loadTheme, saveTheme } from "../utils/themeSwitcher";
import { rawToGamesInfo } from "../utils/utils";
import GlobalStyle, { dark, light, sizes } from "../styles/styles";
import Filter from "../components/Filter/Filter";
import { useRouter } from "next/router";

const GlobalThemes = {
  true: dark,
  false: light,
};

export default function Home({ gamesInfo }) {
  // const router = useRouter();
  // const [page, setPage] = useState(parseInt(router.query.page) || 1);

  const [theme, setTheme] = useState(true);
  const swapTheme = useCallback(() => {
    saveTheme(GlobalThemes[!theme].name);
    setTheme(!theme);
  }, [theme, setTheme, GlobalThemes]);

  useEffect(() => {
    const loadedTheme = loadTheme();
    if (loadedTheme == GlobalThemes[true].name) {
      setTheme(true);
    } else {
      setTheme(false);
    }
  }, [setTheme, GlobalThemes]);

  return (
    <ThemeProvider theme={GlobalThemes[theme]}>
      <GlobalStyle />
      <Head>
        <title>Next Game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="ThemeContainer">
        <main>
          <MainHeader>
            <Logo height={32} />
            <Search height={22} color={GlobalThemes[theme].colors.secondary} />
            <div className="IconContainer">
              <ThemeSwitcher
                size={24}
                inactive={GlobalThemes[!theme].name}
                onClick={swapTheme}
              />
              <Sort size={20} />
              <Filter size={20} />
            </div>
          </MainHeader>
          <div>Games count: {gamesInfo.count}</div>
        </main>
        <footer></footer>
      </div>
    </ThemeProvider>
  );
}

export async function getServerSideProps(context) {
  const API_URL = "https://api.rawg.io/api/games";
  const PAGE_SIZE = 20;

  console.log(context.query);
  const data = await (
    await fetch(
      `https://api.rawg.io/api/games?key=0fd7438156a34f4789ffd3ccc1ffb799&page_size=20`
    )
  )?.json();
  const gamesInfo = rawToGamesInfo(data);
  return {
    props: {
      gamesInfo,
    },
  };
}
